version: '3.8'

services:
  # Database Services
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: sei-timescaledb
    environment:
      POSTGRES_DB: sei_platform
      POSTGRES_USER: sei_user
      POSTGRES_PASSWORD: sei_password
      TIMESCALEDB_TELEMETRY: off
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./scripts/init-timescaledb.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sei-network

  postgresql:
    image: postgres:14-alpine
    container_name: sei-postgresql
    environment:
      POSTGRES_DB: sei_metadata
      POSTGRES_USER: sei_user
      POSTGRES_PASSWORD: sei_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgresql.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sei-network

  # Cache and Message Queue
  redis:
    image: redis:7-alpine
    container_name: sei-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sei-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: sei-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - sei-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: sei-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - sei-network

  # Analytics and BI
  metabase:
    image: metabase/metabase:latest
    container_name: sei-metabase
    depends_on:
      - postgresql
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: sei_metadata
      MB_DB_PORT: 5432
      MB_DB_USER: sei_user
      MB_DB_PASS: sei_password
      MB_DB_HOST: postgresql
    ports:
      - "3000:3000"
    volumes:
      - metabase_data:/metabase-data
    networks:
      - sei-network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: sei-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sei-network

  grafana:
    image: grafana/grafana:latest
    container_name: sei-grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - sei-network

  # API Gateway
  kong:
    image: kong:latest
    container_name: sei-kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./config/kong.yml:/etc/kong/kong.yml
    networks:
      - sei-network

  # Development Services
  # Git Data Collector Service
  git-collector:
    build:
      context: ./src/collectors/git
      dockerfile: Dockerfile
    container_name: sei-git-collector
    depends_on:
      - kafka
      - redis
    environment:
      KAFKA_BROKERS: kafka:9092
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: INFO
    env_file:
      - .env
    volumes:
      - ./src/collectors/git:/app
      - ./config:/app/config
    networks:
      - sei-network

  # Jira Data Collector Service
  jira-collector:
    build:
      context: ./src/collectors/jira
      dockerfile: Dockerfile
    container_name: sei-jira-collector
    depends_on:
      - kafka
      - redis
    environment:
      KAFKA_BROKERS: kafka:9092
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: INFO
    env_file:
      - .env
    volumes:
      - ./src/collectors/jira:/app
      - ./config:/app/config
    networks:
      - sei-network

  # Data Processing Service
  data-processor:
    build:
      context: ./src/processors
      dockerfile: Dockerfile
    container_name: sei-data-processor
    depends_on:
      - kafka
      - timescaledb
      - redis
    environment:
      KAFKA_BROKERS: kafka:9092
      TIMESCALE_URL: postgresql://sei_user:sei_password@timescaledb:5432/sei_platform
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: INFO
    volumes:
      - ./src/processors:/app
      - ./config:/app/config
    networks:
      - sei-network

  # API Service
  api-service:
    build:
      context: ./src/apis
      dockerfile: Dockerfile
    container_name: sei-api-service
    depends_on:
      - timescaledb
      - postgresql
      - redis
    environment:
      TIMESCALE_URL: postgresql://sei_user:sei_password@timescaledb:5432/sei_platform
      POSTGRES_URL: postgresql://sei_user:sei_password@postgresql:5432/sei_metadata
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: INFO
    ports:
      - "8080:8080"
    volumes:
      - ./src/apis:/app
      - ./config:/app/config
    networks:
      - sei-network

  # Frontend Development
  frontend-dev:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    container_name: sei-frontend-dev
    depends_on:
      - api-service
    environment:
      REACT_APP_API_URL: http://localhost:8080
      REACT_APP_WS_URL: ws://localhost:8080/ws
    ports:
      - "3002:3000"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    networks:
      - sei-network

  # Workflow Orchestration
  airflow-webserver:
    image: apache/airflow:2.7.0
    container_name: sei-airflow-webserver
    depends_on:
      - postgresql
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://sei_user:sei_password@postgresql/sei_metadata
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://sei_user:sei_password@postgresql/sei_metadata
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin123
    volumes:
      - ./src/workflows/dags:/opt/airflow/dags
      - ./src/workflows/logs:/opt/airflow/logs
      - ./src/workflows/plugins:/opt/airflow/plugins
    ports:
      - "8082:8080"
    command: webserver
    networks:
      - sei-network

  airflow-scheduler:
    image: apache/airflow:2.7.0
    container_name: sei-airflow-scheduler
    depends_on:
      - postgresql
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://sei_user:sei_password@postgresql/sei_metadata
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://sei_user:sei_password@postgresql/sei_metadata
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./src/workflows/dags:/opt/airflow/dags
      - ./src/workflows/logs:/opt/airflow/logs
      - ./src/workflows/plugins:/opt/airflow/plugins
    command: scheduler
    networks:
      - sei-network

  # Message Queue UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: sei-kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8083:8080"
    networks:
      - sei-network

  # Development Tools
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sei-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sei.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8084:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - sei-network

volumes:
  timescale_data:
  postgres_data:
  redis_data:
  kafka_data:
  metabase_data:
  prometheus_data:
  grafana_data:
  pgadmin_data:

networks:
  sei-network:
    driver: bridge
